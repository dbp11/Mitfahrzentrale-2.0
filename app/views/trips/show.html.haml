-#
  übergebene Variablen:
    - @user
      der aktuell zugreifende Benutzer
    - @trip
      die Fahrt, um die es gerade geht
    - @free_seats
      noch freie Sitzplätze
    - @occupied_seats
      Anzahl besetzter Plätze
    - @commited_passenger
      Array mit allen Mitfahrern
    - @uncommited_passenger
      Array mit potentiellen Mitfahrern, die noch nicht akzeptiert wurden
    - Variablen, zum bedingten Ausgeben von Informationen, abhängig davon, welchen Status
      der aktuelle Benutzer hat:
        * @status
          Status des aktuellen Benutzers (s.u.)
        * @FAHRER
          der aktuelle Benutzer ist Fahrer
        * @MITFAHRER
          der aktuelle Benutzer ist Mitfahrer
        * @POTENTIELLER_MITFAHRER
          der aktuelle Benutzer hat sich als Mitfahrer beworben, wurde aber noch nicht
          angenommen
        * @GAST
          der aktuelle Benutzer ist weder Fahrer, noch Mitfahrer, noch hat er eine
          Bewerbung zur Mitfahrt abgeschickt (also reiner Beobachter - z.B. über die
          Suche zu dieser Fahrt gekommen)

  übergebene Methoden:
    - passenger.get_avg_rating
      gibt das aktuelle Rating (Durchschnitt aller Bewertungen) aus
    - passenger.count_ratings
      gibt aus, wie oft der Benutzer bewertet wurde

  to do:
    - "Fahrt löschen"-Link für Fahrer??

-#Die Tabelle hat zwei Spalten: Eine für den die Tabelle der Fahrtinformationen, Mitfahrer,
  Bewerber (nur für Fahrer und eigener Datensatz des Bewerbers sichtbar) und eine für die Map
  (inkl. Fahrtdauer und -entfernung)

- c_passengers = @commited_passenger
- u_passengers = @uncommited_passenger
- f_seats = @free_seats
- o_seats = @occupied_seats
- seats = @trip.free_seats
- fahrer = @trip.user
- trip = @trip
- tsstreet = trip.get_start_address_info[:street]
- tsplz = trip.get_start_address_info[:plz]
- tscity = trip.get_start_address_info[:city]
- testreet = trip.get_end_address_info[:street]
- teplz = trip.get_end_address_info[:plz]
- tecity = trip.get_end_address_info[:city]
- user = @user

-#%meta{:name => "viewport", :content => "initial-scale=1.0, user-scalable=no"}

-#Java-Script für die Map. Eingefügt wird sie in einem DIV mit der Klasse "map_canvas"
  Der Code wurde 1:1 von Google übernommen (teilweise in HAML umgeschrieben) und als Start-
  und Zielpunkte die Start- und Zieladressen eingefügt.
%script{:type => "text/javascript", :src => "http://maps.google.com/maps/api/js?sensor=false"}

:javascript
  var directionDisplay;
  var directionsService = new google.maps.DirectionsService();
  var map;

  function initialize() {
    directionsDisplay = new google.maps.DirectionsRenderer();
    var latlng = new google.maps.LatLng(-34.397, 150.644);
    var myOptions = {
      zoom:7,
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      center: latlng
    }
    map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);
    directionsDisplay.setMap(map);
  }
    
  var start = "#{tsstreet} #{tsplz} #{tscity}";
  var end = "#{testreet} #{teplz} #{tecity}";
  var request = {
    origin:start, 
    destination:end,
    travelMode: google.maps.DirectionsTravelMode.DRIVING
  };

  directionsService.route(request, function(result, status) {
    if (status == google.maps.DirectionsStatus.OK) {
      directionsDisplay.setDirections(result);
    }
  });

%table.trips_base_table
  %tr
    %td
      %table.trips_show_info_table
        %tr
          %td.center{:colspan => "4"} Fahrtinformationen
        %tr
          %td.left_bold Abfahrt:
          %td.left= "#{tsstreet}, #{"#{tsplz} #{tscity}"}"
          %td.center= trip.start_time.strftime("%d.%m.%Y")
          %td.center= trip.start_time.strftime("%H:%M")
        %tr
          %td.left_bold Ankunft:
          %td.left= "#{testreet}, #{"#{teplz} #{tecity}"}"
          %td.center
          %td.center
        %tr
          %td.left_bold#minimal Fahrer:
          %td.left{:colspan => "3"}
            = link_to("#{fahrer.name}", fahrer)
            = " #{fahrer.get_avg_rating_driver} (#{fahrer.count_ratings_driver})"
            -#Nur andere als der Fahrer sollen ihm Nachrichten schicken können
            - if @status != @FAHRER
              = link_to("Nachricht schicken", url_for(:action => "new", :controller => "messages", :uid => fahrer.id, :tid => trip.id)) + " "
              -#Wenn Fahrer vom aktuellen Benutzer noch nicht bewertet wurde und die Fahrt beendet ist, dann
                Bewerten-Link anzeigen
              - if !fahrer.allready_rated(user, trip) and trip.finished
                = link_to("Bewerten", url_for(:action => "new", :controller => "ratings", :uid => fahrer.id, :tid => trip.id))
        %tr
          %td.left_bold#minimal Auto:
          %td.left{:colspan => "3"}= link_to("#{trip.car.car_type}", trip.car) +" (#{trip.car.description.truncate(60)})"
        %tr
          %td.left_bold Hinweise:
          %td.left{:colspan => "3"}= trip.comment
      -#Tabelle mit Mitfahrern
      %table.trips_show_passenger_table
        %tr
          %td.center{:colspan => "5"}= "Mitfahrer (#{o_seats}/#{seats})"
        -#Wenn der aktuelle Benutzer weder Fahrer noch Mitfahrer ist, so darf er die Mitfahrer nicht sehen
          (Hinweis wird ausgegeben)
        - if @status != @FAHRER and @status != @MITFAHRER
          %tr
            %td.center{:colspan => "4"} Sie haben keine Berechtigung, Mitfahrer anzuzeigen
        -#Wenn aktueller Benutzer Fahrer oder Mitfahrer ist, so sollen die Mitfahrer angezeigt werden
        - if @status == @FAHRER or @status == @MITFAHRER
          -#Wenn keine Mitfahrer vorhanden, dann Hinweis ausgeben, ansonsten Mitfahrer ausgeben
          - if c_passengers == nil or c_passengers.count <= 0
            %tr
              %td.center{:colspan => "4"} keine Mitfahrer vorhanden
          -else
            %tr
              %td Benutzername
              %td.left{:colspan => "4"} Rating
            -#Über alle Mitfahrer iterieren
            - c_passengers.each do |passenger|
              %tr
                %td= link_to "#{passenger}", passenger
                %td= "#{passenger.get_avg_rating_passenger} (#{passenger.count_ratings_passenger})"
                %td.right
                  -#Wenn der aktuelle Benutzer nicht der Mitfahrer ist, über den gerade iteriert wird,
                    dann gib den "Nachricht schicken"-Link aus
                  - if user != passenger
                    = link_to("Nachricht schicken", url_for(:action => "new", :controller => "messages", :tid => trip.id, :uid => passenger.id))
                %td.right
                  -#Wenn die Fahrt noch nicht beendet ist UND der aktuelle Benutzer der Fahrer ODER der
                    Mitfahrer ist, über den gerade iteriert wird, DANN gib den Link zum Austragen aus
                  - if !trip.finished and (user == passenger or @status == @FAHRER)
                    = link_to("Austragen", url_for(:action => "update", :controller => "trips", :uid => passenger.id, :decline => true))
                  -#Wenn die Fahrt beendet ist UND der aktuelle Benutzer NICHT der Mitfahrer ist, über den
                    gerade iteriert wird UND der aktuelle Benutzer den iterierten für diese Fahrt noch
                    NICHT bewertet hat, DANN zeige den "Bewerten"-Link an.
                  - if trip.finished and user != passenger and !passenger.allready_rated(user, trip)
                    = link_to("Bewerten", url_for(:action => "new", :controller => "ratings", :uid => passenger.id, :tid => trip.id))
                %td
      -#Tabelle mit Mitfahr-Anfragen
      %table.trips_show_passenger_table
        %tr
          -#Jeder darf sehen, wieviele offene Bewerbungen es gibt (somit kann jeder selbst entscheiden,
            ob er eine Bewerbung für fruchtbar hält)
          %td.center{:colspan => "4"}= "Anfragen (#{u_passengers == nil ? "0" : u_passengers.count})"
        -#Die Bewerbungen selbst darf aber nur der Fahrer sehen (und ein Bewerber seine eigene, um
          sie zurücknehmen zu können). Wenn keine Bewerbungen vorhanden, dann Hinweis ausgeben
        - if @status == @FAHRER and (u_passengers == nil or u_passengers.count <= 0)
          %tr
            %td.center{:colspan => "3"} keine Bewerbungen vorhanden
        - else
          -#Wenn aktueller Benutzer weder Fahrer noch Bewerber ist,...
          - if @status != @FAHRER and @status != @POTENTIELLER_MITFAHRER
            %tr
              %td.center{:colspan => "3"}
                -#Wenn aktueller Benutzer Mitfahrer ist, dann Ansicht verweigern, ansonsten Link
                  zum Bewerben anzeigen
                - if @status == @MITFAHRER
                  Sie haben keine Berechtigung, Bewerber anzuzeigen
                - else
                  = link_to("Als Mitfahrer bewerben", url_for(:action => "update", :controller => "trips", :request => true))
          -#Wenn aktueller Benutzer Fahrer oder Bewerber ist,....
          - if @status == @FAHRER or @status == @POTENTIELLER_MITFAHRER
            %tr
              %td Benutzername
              %td.left{:colspan => "3"} Rating
            -#Über alle Bewerber iterieren
            - u_passengers.each do |passenger|
              -#Für den Fahrer alle Bewerber ausgeben, für Bewerber noch sich selbst
              - if @status == @FAHRER or passenger == user
                %tr
                  %td= link_to "#{passenger}", passenger
                  %td= "#{passenger.get_avg_rating} (#{passenger.count_ratings})"
                  -#Wenn aktueller Benutzer Fahrer ist, dann Link anzeigen zum Nachrichtenschicken,
                    Annehmen und Ablehnen der Bewerbung, ansonsten Link anzeigen, um Bewerbung
                    zurück zu nehmen.
                  - if @status == @FAHRER
                    %td.right
                      = link_to("Nachricht schicken", url_for(:action => "new", :controller => "messages", :uid => passenger.id, :tid => trip.id))
                      - if !trip.finished
                        = link_to("annehmen", url_for(:action => "update", :controller => "trips", :uid => passenger.id, :accept => true))
                        = link_to("ablehnen", url_for(:action => "update", :controller => "trips", :uid => passenger.id, :decline => true))
                  - else
                    -#Wenn Fahrt noch nicht zuende, dann "austragen"-Link anzeigen, ansonsten schließende
                      Tabellenspalte einfügen (sonst Layout-Fehler)
                    - if !trip.finished
                      %td.right= link_to("austragen", url_for(:action => "update", :controller => "trips", :uid => passenger.id, :decline => true))
                    - else
                      %td
                  %td
      -#= link_to("Bewerben", url_for(:action => "update", :controller => "trips", :request => true))

    %td#map
      %table.trips_map_table
        %tr
          %td{:colspan => "2"}
            #map_canvas{:style => "width: 100%;"}
        %tr
          %td.left_bold Entfernung:
          %td.left= trip.get_route_distance
        %tr
          %td.left_bold ca. Dauer:
          %td.left= trip.get_route_duration


-#Sorgt dafür, dass die Karte immer nur so hoch, wie breit ist (Breite abhängig vom Bildschirm,
  Höhe könnte durch größere Tabellen mir Mitfahrern, etc. wachsen => Seitenverhältniss und damit die
  Größe der ganzen Karte würde verändert)
:javascript
  var b = document.getElementById("map_canvas").offsetWidth;
  var style = document.getElementById("map_canvas").getAttribute("style");
  document.getElementById("map_canvas").setAttribute("style",style+"height:"+b,0);

